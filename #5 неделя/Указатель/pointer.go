package main

import "fmt"

func main() {
	funcOutput()
}

/*Этап 1. Получение адреса памяти переменной*/
func stage1() {
	a := 5
	fmt.Println(&a) // Получаем и выводим адрес памяти* переменной а.
}

/*Этап 2. Получение данных через указатель*/
func stage2() {
	a := 5
	pointer := &a
	fmt.Println(*pointer) // Получаем через указатель** и выводим данные, что хранятся по адресу, который мы присвоили переменной pointer.
	fmt.Println(*&a)      // То же самое что и fmt.Println(*pointer), но без переменной pointer.
}

/* Пример использования указателя */
func change(str *string) { // Принимаем адрес
	*str = "рим" // Присваеваем адресу новое значение
}

func funcOutput() {
	s := "мир"     // создаем переменную s с строчными данными "мир".
	fmt.Println(s) // Выводим эту переменную в консоль.

	// первый вариант записи
	change(&s)     // Изменяем эту переменную, заменив ее значение через адрес памяти, который в свою очередь передается в функцию change.
	fmt.Println(s) // Выводим измененную переменную s с строчными данными "рим".

	// второй вариант записи
	var pointer *string = &s // Записываем в переменную pointer адрес переменной, данные которой мы будем менять.
	change(pointer)          // через переменную передаем этот адрес в функцию.
	fmt.Println(s)           // Выводим измененную переменную s с строчными данными "рим".
}

/*
Адрес памяти - это адрес, по которому можно получить данные, которые в свою очередь хранятся в ячейке памяти (в переменной).
Адрес памяти всегда имеет шестнадцатеричный формат, начиная с 0х (например: 0xc00000a098).

Указатель - (оператор разыменования) превращает адрес памяти в данные, который этот же адрес памяти и хранит.
*/
